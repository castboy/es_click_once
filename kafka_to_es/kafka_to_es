#/bin/bash

function start() {
	echo $$ > ${APT_PID_FILE}/${App}.pid
	cd ${Apthome}/package/${App}
	apt_model
	exec ./apt_kafka_to_es	
}

function stop() {
	kill `cat /var/run/${App}.pid`;;	
}

function put_model() {
	put_model_ok=false
	
	while ($put_model_ok)
	do
		for node in ${es_nodes_array[@]} 
		do 
		    if [ "" != $(curl -XPUT 'node:9200/apt_test' --data-binary @$Apthome/package/es_model 2>/dev/null | sed -n '/.*acknowledged.*true.*shards_acknowledged.*true/p') ]
			then
				log "put es model success"
				put_model_ok=true
				break
			fi
		done
		sleep 100ms		
	done
}

function es_nodes() {
	es_nodes= ./get es_node
	if [ -z es_nodes ]
	then
		log "get es-nodes failed!"
		exit 1
	else
		log "get es-nodes success"
	fi

	OLD_IFS="$IFS" 
	IFS=","
	
	es_nodes_array=($ES_NODES) 
	
	IFS="$OLD_IFS" 	
}

function index_apt_exist() {
	for node in ${es_nodes_array[@]}
	do
		if [ "" != $(curl 'node:9200/_cat/indices' 2>/dev/null | sed -n '/apt/p') ]
		then
			log "es index `apt` exist"
			echo true
			return
		fi
	done
	
	log "es index `apt` not exist"
	echo false
	return
}

function apt_model() {
	es_node
	if !index_apt_exist
	then
		put_model
	fi
}

function log() {
	echo $(date "+%G-%m-%d %H:%M:%S")": INF   detail: $1" >> $INSTALL_LOG
}

function log_file() {
	INSTALL_LOG="$(pwd)/run-$(date "+%G-%m-%d_%H:%M:%S").log"
	touch $INSTALL_LOG
}

log_file
Apthome=${APT_HOME}
App="kafka_to_es"
case $1 in
	"start")
	start
	;;
	"stop")
	stop
	"restart")
	;;
esac

exit 0
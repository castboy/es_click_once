#/bin/bash

function start() {
	echo $$ > ${APT_PID_FILE}/${App}.pid
	cd ${Apthome}/package/${App}
	apt_model
	exec ./apt_kafka_to_es	
}

function stop() {
	kill `cat /var/run/${App}.pid`	
}

function put_index() {	
	for node in ${es_nodes_array[@]} 
	do 
		res=$(curl -XPUT "$node:9200/$es_index" --data-binary @$Apthome/package/es_model 2>/dev/null | sed -n '/.*acknowledged.*true.*shards_acknowledged.*true/p')
	        if [ "" != "$res" ]
		then
			log "put index ok"
			return
		fi
	done

        for node in ${es_nodes_array[@]}
	do
		res=$(curl "$node:9200/_cat/indices" 2>/dev/null | awk '{print $3}')	
		if [ $res = $ex_index ]
		then
			log "index:$es_index already exist"
			return
		else
			log "put index failed"
			exit 1
		fi
	done
}

function get_es_nodes() {
	#es_nodes= ./get es_node
	es_nodes="10.88.1.102;10.88.1.103"
	if [ -z es_nodes ]
	then
		log "get es-nodes failed!"
		exit 1
	else
		log "get es-nodes success"
	fi

	OLD_IFS="$IFS" 
	IFS=";"
	
	es_nodes_array=($es_nodes) 
	
	IFS="$OLD_IFS" 	
}

function index_exist() {
	for node in ${es_nodes_array[@]}
	do
		res=$(curl "node:9200/_cat/indices" 2>/dev/null | sed -n '/apt/p')
		if [ "" != "$res" ]
		then			
			echo true
			return
		fi
	done
	
	echo false
	return
}

function apt_model() {
	get_es_nodes
	
	if $(index_exist)
	then
		log "es index $es_index exist"
	else
		put_index
	fi
}

function log() {
	echo "$(date '+%G-%m-%d %H:%M:%S'): INF   detail: $1" >> $START_LOG
}

function log_file() {
	if [ -z $(ls "$(pwd)" | sed -n '/log/p') ]
	then
		mkdir "$(pwd)/log/start" -p
	fi

	START_LOG="$(pwd)/log/start/start-$(date "+%G-%m-%d_%H:%M:%S").log"
}

log_file
es_index=apt
#Apthome=${APT_HOME}
Apthome=/opt
App="kafka_to_es"
case $1 in
	"start")
	start
	;;
	"stop")
	stop
	;;
	"restart")
	;;
esac

exit 0
